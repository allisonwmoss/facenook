{"ast":null,"code":"var _jsxFileName = \"/Users/allisonmoss/dev/facenook/facenook-app/src/components/allThumbnails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Thumbnail from './Thumbnail';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThumbnailsDiv = styled.div`\nmargin-top: 50px;\nmargin-bottom: 20px;\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\n`;\n_c = ThumbnailsDiv;\nexport default function AllThumbnails(props) {\n  _s();\n\n  const villagers = props.villagers;\n  const [thumbnailVillagers, setThumbnailVillagers] = useState([]);\n  useEffect(() => {\n    //See Footnote 2-------------------------------\n    const valuesArr = Object.values(villagers);\n    let newThumbnailVillagers = [];\n\n    for (let i = 0; i < 5; i++) {\n      const randomId = Math.ceil(Math.random() * 391);\n      const matchingVillager = valuesArr.find(villager => villager.id === randomId); //---------------------------------------------\n\n      newThumbnailVillagers.push(matchingVillager);\n    }\n\n    setThumbnailVillagers(newThumbnailVillagers);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThumbnailsDiv, {\n    children: thumbnailVillagers.map((villager, idx) => {\n      return /*#__PURE__*/_jsxDEV(Thumbnail, {\n        villager: villager,\n        thumbnailVillagers: thumbnailVillagers\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllThumbnails, \"p/IzGJgErkpgnwsQrSmCaePXZ6g=\");\n\n_c2 = AllThumbnails;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ThumbnailsDiv\");\n$RefreshReg$(_c2, \"AllThumbnails\");","map":{"version":3,"sources":["/Users/allisonmoss/dev/facenook/facenook-app/src/components/allThumbnails.js"],"names":["React","useState","useEffect","Thumbnail","Link","styled","ThumbnailsDiv","div","AllThumbnails","props","villagers","thumbnailVillagers","setThumbnailVillagers","valuesArr","Object","values","newThumbnailVillagers","i","randomId","Math","ceil","random","matchingVillager","find","villager","id","push","map","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,a;AAQN,eAAe,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACzC,QAAMC,SAAS,GAAGD,KAAK,CAACC,SAAxB;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CX,QAAQ,CAAC,EAAD,CAA5D;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMW,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcL,SAAd,CAAlB;AACA,QAAIM,qBAAqB,GAAG,EAA5B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,YAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,GAA1B,CAAjB;AACA,YAAMC,gBAAgB,GAAGT,SAAS,CAACU,IAAV,CAAeC,QAAQ,IAC5CA,QAAQ,CAACC,EAAT,KAAgBP,QADK,CAAzB,CAFwB,CAKxB;;AACAF,MAAAA,qBAAqB,CAACU,IAAtB,CAA2BJ,gBAA3B;AACH;;AACDV,IAAAA,qBAAqB,CAACI,qBAAD,CAArB;AACH,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACI,QAAC,aAAD;AAAA,cAEQL,kBAAkB,CAACgB,GAAnB,CAAuB,CAACH,QAAD,EAAWI,GAAX,KAAmB;AACtC,0BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEJ,QAArB;AAAyC,QAAA,kBAAkB,EAAEb;AAA7D,SAAoCiB,GAApC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA7BuBpB,a;;MAAAA,a","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Thumbnail from './Thumbnail'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst ThumbnailsDiv = styled.div`\nmargin-top: 50px;\nmargin-bottom: 20px;\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\n`\n\nexport default function AllThumbnails(props) {\n    const villagers = props.villagers\n    const [thumbnailVillagers, setThumbnailVillagers] = useState([])\n    useEffect(() => {\n        //See Footnote 2-------------------------------\n        const valuesArr = Object.values(villagers)\n        let newThumbnailVillagers = []\n        for (let i = 0; i < 5; i++) {\n            const randomId = Math.ceil(Math.random() * 391)\n            const matchingVillager = valuesArr.find(villager =>\n                villager.id === randomId\n            )\n            //---------------------------------------------\n            newThumbnailVillagers.push(matchingVillager)\n        }\n        setThumbnailVillagers(newThumbnailVillagers)\n    }, [])\n\n    return (\n        <ThumbnailsDiv>\n            {\n                thumbnailVillagers.map((villager, idx) => {\n                    return (\n                        <Thumbnail villager={villager} key={idx} thumbnailVillagers={thumbnailVillagers} />\n                    )\n                })\n            }\n        </ThumbnailsDiv>\n    )\n}"]},"metadata":{},"sourceType":"module"}