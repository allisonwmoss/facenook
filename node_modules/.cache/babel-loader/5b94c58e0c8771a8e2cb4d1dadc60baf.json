{"ast":null,"code":"var _jsxFileName = \"/Users/allisonmoss/dev/facenook/facenook-app/src/components/ThumbnailsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AllThumbnails from './allThumbnails';\nimport Thumbnail from './Thumbnail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require('axios').default;\n\nexport default function ThumbnailsContainer() {\n  _s();\n\n  const [isLoading, setLoading] = useState(true);\n  const [villagers, setVillagers] = useState({}); // const [villager, setVillager] = useState({})\n\n  useEffect(() => {\n    axios.get(\"https://acnhapi.com/v1/villagers/\").then(response => {\n      setVillagers(response.data);\n      setLoading(false);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Loading, please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AllThumbnails, {\n      villagers: villagers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this); // const [thumbnailVillagers, setThumbnailVillagers] = useState([])\n  // useEffect(() => {\n  //     if (!villagers) {\n  //         return (\n  //             <h2>loading, please wait...</h2>\n  //         )\n  //     } else {\n  //         const valuesArr = Object.values(villagers)\n  //         let newThumbnailVillagers = []\n  //         for (let i = 0; i < 5; i++) {\n  //             const randomId = Math.ceil(Math.random() * 391)\n  //             const matchingVillager = valuesArr.find(villager =>\n  //                 villager.id === randomId\n  //             )\n  //             console.log(randomId)\n  //             console.log(matchingVillager)\n  //             newThumbnailVillagers.push(matchingVillager)\n  //         }\n  //         console.log(newThumbnailVillagers)\n  //         setThumbnailVillagers(newThumbnailVillagers)\n  //         console.log(thumbnailVillagers)\n  //     }\n  // }, [])\n  // return (\n  //     <div>\n  //         {/* {\n  //             villagers.map((villager, idx) => {\n  //                 return (\n  //                     <Thumbnail villager={villager} key={idx} />\n  //                 )\n  //             })\n  //         } */}\n  //     </div>\n  // )\n}\n\n_s(ThumbnailsContainer, \"PJCJjZ1XUTAA9XFUsQ9YVeGMvKQ=\");\n\n_c = ThumbnailsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThumbnailsContainer\");","map":{"version":3,"sources":["/Users/allisonmoss/dev/facenook/facenook-app/src/components/ThumbnailsContainer.js"],"names":["React","useState","useEffect","AllThumbnails","Thumbnail","axios","require","default","ThumbnailsContainer","isLoading","setLoading","villagers","setVillagers","get","then","response","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC1C,QAAM,CAACC,SAAD,EAAYC,UAAZ,IAA0BT,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C,CAF0C,CAG1C;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACQ,GAAN,CAAU,mCAAV,EAA+CC,IAA/C,CAAoDC,QAAQ,IAAI;AAC5DH,MAAAA,YAAY,CAACG,QAAQ,CAACC,IAAV,CAAZ;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAHD,EADY,CAKZ;AACH,GANQ,EAMN,EANM,CAAT;;AAQA,MAAID,SAAJ,EAAe;AACX,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEE;AAA1B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAlB0C,CAuB1C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;GA5DuBH,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport AllThumbnails from './allThumbnails';\nimport Thumbnail from './Thumbnail'\nconst axios = require('axios').default\n\nexport default function ThumbnailsContainer() {\n    const [isLoading, setLoading] = useState(true);\n    const [villagers, setVillagers] = useState({})\n    // const [villager, setVillager] = useState({})\n    useEffect(() => {\n        axios.get(\"https://acnhapi.com/v1/villagers/\").then(response => {\n            setVillagers(response.data)\n            setLoading(false)\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    if (isLoading) {\n        return (\n            <h2>Loading, please wait</h2>\n        )\n    }\n\n    return (\n        <div>\n            <AllThumbnails villagers={villagers} />\n        </div>\n    )\n    // const [thumbnailVillagers, setThumbnailVillagers] = useState([])\n\n    // useEffect(() => {\n    //     if (!villagers) {\n    //         return (\n    //             <h2>loading, please wait...</h2>\n    //         )\n    //     } else {\n    //         const valuesArr = Object.values(villagers)\n    //         let newThumbnailVillagers = []\n    //         for (let i = 0; i < 5; i++) {\n    //             const randomId = Math.ceil(Math.random() * 391)\n    //             const matchingVillager = valuesArr.find(villager =>\n    //                 villager.id === randomId\n    //             )\n    //             console.log(randomId)\n    //             console.log(matchingVillager)\n    //             newThumbnailVillagers.push(matchingVillager)\n    //         }\n    //         console.log(newThumbnailVillagers)\n    //         setThumbnailVillagers(newThumbnailVillagers)\n    //         console.log(thumbnailVillagers)\n    //     }\n    // }, [])\n\n\n    // return (\n    //     <div>\n    //         {/* {\n    //             villagers.map((villager, idx) => {\n    //                 return (\n    //                     <Thumbnail villager={villager} key={idx} />\n    //                 )\n    //             })\n    //         } */}\n    //     </div>\n    // )\n}"]},"metadata":{},"sourceType":"module"}