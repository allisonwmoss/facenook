{"ast":null,"code":"var _jsxFileName = \"/Users/allisonmoss/dev/facenook/facenook-app/src/components/SearchResult.js\";\nimport React from 'react';\nimport Thumbnail from './Thumbnail';\nimport Error from './Error';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContainerDiv = styled.div`\n    padding: 50px;\n    display: flex;\n    justify-content: center;\n`;\n_c = ContainerDiv;\nexport default function SearchResult(props) {\n  let searchString = props.searchString; //convert any search string to lowercase with uppercased first letter\n  //See Footnote 4----\n\n  searchString = searchString.toLowerCase();\n  searchString = searchString.charAt(0).toUpperCase() + searchString.slice(1);\n  const villagers = props.villagers;\n  const valuesArr = Object.values(villagers);\n  const matchingVillager = valuesArr.find(villager => villager.name['name-USen'] === searchString);\n\n  if (!matchingVillager) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      reason: \"no-match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ContainerDiv, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Results for '\", searchString, \"'\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Thumbnail, {\n      villager: matchingVillager\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c2 = SearchResult;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ContainerDiv\");\n$RefreshReg$(_c2, \"SearchResult\");","map":{"version":3,"sources":["/Users/allisonmoss/dev/facenook/facenook-app/src/components/SearchResult.js"],"names":["React","Thumbnail","Error","styled","ContainerDiv","div","SearchResult","props","searchString","toLowerCase","charAt","toUpperCase","slice","villagers","valuesArr","Object","values","matchingVillager","find","villager","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,YAAY,GAAGD,MAAM,CAACE,GAAI;AAChC;AACA;AACA;AACA,CAJA;KAAMD,Y;AAMN,eAAe,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,MAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB,CADwC,CAExC;AACA;;AACAA,EAAAA,YAAY,GAAGA,YAAY,CAACC,WAAb,EAAf;AACAD,EAAAA,YAAY,GAAGA,YAAY,CAACE,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,KAAuCH,YAAY,CAACI,KAAb,CAAmB,CAAnB,CAAtD;AAEA,QAAMC,SAAS,GAAGN,KAAK,CAACM,SAAxB;AACA,QAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcH,SAAd,CAAlB;AACA,QAAMI,gBAAgB,GAAGH,SAAS,CAACI,IAAV,CAAeC,QAAQ,IAC5CA,QAAQ,CAACC,IAAT,CAAc,WAAd,MAA+BZ,YADV,CAAzB;;AAGA,MAAI,CAACS,gBAAL,EAAuB;AACnB,wBACI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI,QAAC,YAAD;AAAA,4BACI;AAAA,kCAAkBT,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAES;AAArB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;MAxBuBX,Y","sourcesContent":["import React from 'react'\nimport Thumbnail from './Thumbnail'\nimport Error from './Error'\nimport styled from 'styled-components'\n\nconst ContainerDiv = styled.div`\n    padding: 50px;\n    display: flex;\n    justify-content: center;\n`\n\nexport default function SearchResult(props) {\n    let searchString = props.searchString\n    //convert any search string to lowercase with uppercased first letter\n    //See Footnote 4----\n    searchString = searchString.toLowerCase();\n    searchString = searchString.charAt(0).toUpperCase() + searchString.slice(1)\n\n    const villagers = props.villagers\n    const valuesArr = Object.values(villagers)\n    const matchingVillager = valuesArr.find(villager =>\n        villager.name['name-USen'] === searchString\n    )\n    if (!matchingVillager) {\n        return (\n            <Error reason=\"no-match\" />\n        )\n    }\n\n    return (\n        <ContainerDiv>\n            <h2>Results for '{searchString}'</h2>\n            <Thumbnail villager={matchingVillager} />\n        </ContainerDiv>\n    )\n}"]},"metadata":{},"sourceType":"module"}