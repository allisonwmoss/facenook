{"ast":null,"code":"var _jsxFileName = \"/Users/allisonmoss/dev/facenook/facenook-app/src/components/ThumbnailsContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Thumbnail from './Thumbnail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ThumbnailsContainer(props) {\n  _s();\n\n  // console.log(props.villagers)\n  const [thumbnailVillagers, setThumbnailVillagers] = useState([]);\n  useEffect(() => {\n    console.log(props.villagers.length);\n\n    if (!props.villagers.length) {\n      return /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"loading, please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    } else {\n      const valuesArr = Object.values(props.villagers);\n      let newThumbnailVillagers = [];\n\n      for (let i = 0; i < 5; i++) {\n        const randomId = Math.ceil(Math.random() * 391);\n        const matchingVillager = valuesArr.find(villager => villager.id === randomId);\n        console.log(randomId);\n        console.log(matchingVillager);\n        newThumbnailVillagers.push(matchingVillager);\n      }\n\n      console.log(newThumbnailVillagers);\n      setThumbnailVillagers(newThumbnailVillagers);\n      console.log(thumbnailVillagers);\n    }\n  }, []); // console.log(allVillagersObj)\n  // console.log(typeof valuesArr)\n  // console.log(valuesArr)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThumbnailsContainer, \"p/IzGJgErkpgnwsQrSmCaePXZ6g=\");\n\n_c = ThumbnailsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThumbnailsContainer\");","map":{"version":3,"sources":["/Users/allisonmoss/dev/facenook/facenook-app/src/components/ThumbnailsContainer.js"],"names":["React","useState","useEffect","Thumbnail","ThumbnailsContainer","props","thumbnailVillagers","setThumbnailVillagers","console","log","villagers","length","valuesArr","Object","values","newThumbnailVillagers","i","randomId","Math","ceil","random","matchingVillager","find","villager","id","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAC/C;AACA,QAAM,CAACC,kBAAD,EAAqBC,qBAArB,IAA8CN,QAAQ,CAAC,EAAD,CAA5D;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,SAAN,CAAgBC,MAA5B;;AACA,QAAI,CAACN,KAAK,CAACK,SAAN,CAAgBC,MAArB,EAA6B;AACzB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,MAIO;AACH,YAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcT,KAAK,CAACK,SAApB,CAAlB;AACA,UAAIK,qBAAqB,GAAG,EAA5B;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,cAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,GAA1B,CAAjB;AACA,cAAMC,gBAAgB,GAAGT,SAAS,CAACU,IAAV,CAAeC,QAAQ,IAC5CA,QAAQ,CAACC,EAAT,KAAgBP,QADK,CAAzB;AAGAT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYY,gBAAZ;AACAN,QAAAA,qBAAqB,CAACU,IAAtB,CAA2BJ,gBAA3B;AACH;;AACDb,MAAAA,OAAO,CAACC,GAAR,CAAYM,qBAAZ;AACAR,MAAAA,qBAAqB,CAACQ,qBAAD,CAArB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;AACH;AACJ,GAtBQ,EAsBN,EAtBM,CAAT,CAJ+C,CA4B/C;AAGA;AACA;;AAIA,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA/CuBF,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Thumbnail from './Thumbnail'\n\nexport default function ThumbnailsContainer(props) {\n    // console.log(props.villagers)\n    const [thumbnailVillagers, setThumbnailVillagers] = useState([])\n\n    useEffect(() => {\n        console.log(props.villagers.length)\n        if (!props.villagers.length) {\n            return (\n                <h2>loading, please wait...</h2>\n            )\n        } else {\n            const valuesArr = Object.values(props.villagers)\n            let newThumbnailVillagers = []\n            for (let i = 0; i < 5; i++) {\n                const randomId = Math.ceil(Math.random() * 391)\n                const matchingVillager = valuesArr.find(villager =>\n                    villager.id === randomId\n                )\n                console.log(randomId)\n                console.log(matchingVillager)\n                newThumbnailVillagers.push(matchingVillager)\n            }\n            console.log(newThumbnailVillagers)\n            setThumbnailVillagers(newThumbnailVillagers)\n            console.log(thumbnailVillagers)\n        }\n    }, [])\n\n    // console.log(allVillagersObj)\n\n\n    // console.log(typeof valuesArr)\n    // console.log(valuesArr)\n\n\n\n    return (\n        <div>\n            {/* {\n                villagers.map((villager, idx) => {\n                    return (\n                        <Thumbnail villager={villager} key={idx} />\n                    )\n                })\n            } */}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}