{"ast":null,"code":"var _jsxFileName = \"/Users/allisonmoss/dev/facenook/facenook-app/src/components/SearchResult.js\";\nimport React from 'react';\nimport Thumbnail from './Thumbnail';\nimport Error from './Error';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchResult(props) {\n  let searchString = props.searchString;\n\n  function isCapitalized(str) {\n    return str.charAt(0) === str.charAt(0).toUpperCase();\n  }\n\n  if (isCapitalized(searchString) === false) {\n    searchString = searchString.charAt(0).toUpperCase();\n  }\n\n  const villagers = props.villagers;\n  const valuesArr = Object.values(villagers);\n  const matchingVillager = valuesArr.find(villager => villager.name['name-USen'] === searchString);\n\n  if (!matchingVillager) {\n    return /*#__PURE__*/_jsxDEV(Error, {\n      reason: \"no-match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Thumbnail, {\n    villager: matchingVillager\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/allisonmoss/dev/facenook/facenook-app/src/components/SearchResult.js"],"names":["React","Thumbnail","Error","Link","SearchResult","props","searchString","isCapitalized","str","charAt","toUpperCase","villagers","valuesArr","Object","values","matchingVillager","find","villager","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACxC,MAAIC,YAAY,GAAGD,KAAK,CAACC,YAAzB;;AACA,WAASC,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,MAAkBD,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAcC,WAAd,EAAzB;AACH;;AACD,MAAIH,aAAa,CAACD,YAAD,CAAb,KAAgC,KAApC,EAA2C;AACvCA,IAAAA,YAAY,GAAGA,YAAY,CAACG,MAAb,CAAoB,CAApB,EAAuBC,WAAvB,EAAf;AACH;;AACD,QAAMC,SAAS,GAAGN,KAAK,CAACM,SAAxB;AACA,QAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcH,SAAd,CAAlB;AACA,QAAMI,gBAAgB,GAAGH,SAAS,CAACI,IAAV,CAAeC,QAAQ,IAC5CA,QAAQ,CAACC,IAAT,CAAc,WAAd,MAA+BZ,YADV,CAAzB;;AAGA,MAAI,CAACS,gBAAL,EAAuB;AACnB,wBACI,QAAC,KAAD;AAAO,MAAA,MAAM,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;KAtBuBX,Y","sourcesContent":["import React from 'react'\nimport Thumbnail from './Thumbnail'\nimport Error from './Error'\nimport { Link } from 'react-router-dom'\n\nexport default function SearchResult(props) {\n    let searchString = props.searchString\n    function isCapitalized(str) {\n        return str.charAt(0) === str.charAt(0).toUpperCase()\n    }\n    if (isCapitalized(searchString) === false) {\n        searchString = searchString.charAt(0).toUpperCase()\n    }\n    const villagers = props.villagers\n    const valuesArr = Object.values(villagers)\n    const matchingVillager = valuesArr.find(villager =>\n        villager.name['name-USen'] === searchString\n    )\n    if (!matchingVillager) {\n        return (\n            <Error reason=\"no-match\" />\n        )\n    }\n\n    return (\n        <Thumbnail villager={matchingVillager} />\n    )\n}"]},"metadata":{},"sourceType":"module"}